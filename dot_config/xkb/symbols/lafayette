// Generated by kalamine on 2024-05-05
//
// This XKB symbols file should be copied to:
//     /usr/share/X11/xkb/symbols/custom
// or
//     $XKB_CONFIG_ROOT/symbols/custom
//
// File          : lafayet.xkb_symbols
// Project page  : https://github.com/fabi1cazenave/qwerty-lafayette
// Author        : Fabien Cazenave (:kazé)
// Version       : 0.9.0
// License       : WTFPL - Do What The Fuck You Want Public License
//
// French (Qwerty-Lafayette)
//
// Base layer + dead key
// ╭╌╌╌╌╌┰─────┬─────┬─────┬─────┬─────┰─────┬─────┬─────┬─────┬─────┰╌╌╌╌╌┬╌╌╌╌╌╮
// ┆ ~   ┃ ! „ │ @ “ │ # ” │ $ ¢ │ % ‰ ┃ ^   │ &   │ *   │ (   │ )   ┃ _   ┆ + ± ┆
// ┆ `   ┃ 1 ¡ │ 2 « │ 3 » │ 4 £ │ 5 € ┃ 6 ¥ │ 7 ¤ │ 8 § │ 9 ¶ │ 0 ° ┃ - — ┆ = ≠ ┆
// ╰╌╌╌╌╌╂─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┼╌╌╌╌╌┤
//       ┃ Q   │ W   │ E   │ R   │ T   ┃ Y   │ U   │ I   │ O   │ P   ┃ {   ┆ }   ┆
//       ┃   æ │   é │   è │     │     ┃     │   ù │   ï │   œ │     ┃ [   ┆ ]   ┆
//       ┠─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┼╌╌╌╌╌┤
//       ┃ A   │ S   │ D   │ F ª │ G – ┃ H   │ J   │ K   │ L   │**   ┃ "   ┆ |   ┆
//       ┃   à │   ß │   ê │   - │   – ┃   ŷ │   û │   î │   ô │***¨ ┃ '   ┆ \   ┆
// ╭╌╌╌╌╌╂─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┴╌╌╌╌╌╯
// ┆ >   ┃ Z   │ X   │ C   │ V _ │ B — ┃ N   │ M º │ ; • │ :   │ ? ÷ ┃
// ┆ <   ┃   â │   × │   ç │   _ │   — ┃   ñ │   µ │ , · │ . … │ / ¿ ┃
// ╰╌╌╌╌╌┸─────┴─────┴─────┴─────┴─────┸─────┴─────┴─────┴─────┴─────┚
//
// AltGr layer
// ╭╌╌╌╌╌┰─────┬─────┬─────┬─────┬─────┰─────┬─────┬─────┬─────┬─────┰╌╌╌╌╌┬╌╌╌╌╌╮
// ┆     ┃     │     │     │     │     ┃     │     │     │     │     ┃     ┆     ┆
// ┆     ┃     │     │     │     │     ┃     │     │     │     │     ┃     ┆     ┆
// ╰╌╌╌╌╌╂─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┼╌╌╌╌╌┤
//       ┃     │     │     │     │     ┃     │     │     │     │     ┃     ┆     ┆
//       ┃   ! │   @ │   # │   $ │   % ┃   ^ │   & │   * │   ( │   ) ┃     ┆     ┆
//       ┠─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┼╌╌╌╌╌┤
//       ┃     │     │     │     │     ┃     │     │     │     │     ┃     ┆     ┆
//       ┃   1 │   2 │   3 │   4 │   5 ┃   6 │   7 │   8 │   9 │   0 ┃     ┆     ┆
// ╭╌╌╌╌╌╂─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┴╌╌╌╌╌╯
// ┆     ┃     │     │     │     │     ┃     │     │     │     │     ┃
// ┆     ┃   < │   > │   [ │   ] │   { ┃   } │   = │   - │   + │   \ ┃
// ╰╌╌╌╌╌┸─────┴─────┴─────┴─────┴─────┸─────┴─────┴─────┴─────┴─────┚

partial alphanumeric_keys modifier_keys
xkb_symbols "lafayette" {
    name[group1]= "French (Qwerty-Lafayette)";
    key.type[group1] = "EIGHT_LEVEL";

    // Digits
    key <AE01> {[ 1               , exclam          , VoidSymbol      , VoidSymbol      , exclamdown      , U201E           ]}; // 1 !     ¡ „
    key <AE02> {[ 2               , at              , VoidSymbol      , VoidSymbol      , guillemotleft   , U201C           ]}; // 2 @     « “
    key <AE03> {[ 3               , numbersign      , VoidSymbol      , VoidSymbol      , guillemotright  , U201D           ]}; // 3 #     » ”
    key <AE04> {[ 4               , dollar          , VoidSymbol      , VoidSymbol      , sterling        , cent            ]}; // 4 $     £ ¢
    key <AE05> {[ 5               , percent         , VoidSymbol      , VoidSymbol      , EuroSign        , U2030           ]}; // 5 %     € ‰
    key <AE06> {[ 6               , asciicircum     , VoidSymbol      , VoidSymbol      , yen             , VoidSymbol      ]}; // 6 ^     ¥
    key <AE07> {[ 7               , ampersand       , VoidSymbol      , VoidSymbol      , currency        , VoidSymbol      ]}; // 7 &     ¤
    key <AE08> {[ 8               , asterisk        , VoidSymbol      , VoidSymbol      , section         , VoidSymbol      ]}; // 8 *     §
    key <AE09> {[ 9               , parenleft       , VoidSymbol      , VoidSymbol      , paragraph       , VoidSymbol      ]}; // 9 (     ¶
    key <AE10> {[ 0               , parenright      , VoidSymbol      , VoidSymbol      , degree          , VoidSymbol      ]}; // 0 )     °

    // Letters, first row
    key <AD01> {[ q               , Q               , exclam          , VoidSymbol      , ae              , AE              ]}; // q Q !   æ Æ
    key <AD02> {[ w               , W               , at              , VoidSymbol      , eacute          , Eacute          ]}; // w W @   é É
    key <AD03> {[ e               , E               , numbersign      , VoidSymbol      , egrave          , Egrave          ]}; // e E #   è È
    key <AD04> {[ r               , R               , dollar          , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // r R $
    key <AD05> {[ t               , T               , percent         , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // t T %
    key <AD06> {[ y               , Y               , asciicircum     , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // y Y ^
    key <AD07> {[ u               , U               , ampersand       , VoidSymbol      , ugrave          , Ugrave          ]}; // u U &   ù Ù
    key <AD08> {[ i               , I               , asterisk        , VoidSymbol      , idiaeresis      , Idiaeresis      ]}; // i I *   ï Ï
    key <AD09> {[ o               , O               , parenleft       , VoidSymbol      , oe              , OE              ]}; // o O (   œ Œ
    key <AD10> {[ p               , P               , parenright      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // p P )

    // Letters, second row
    key <AC01> {[ a               , A               , 1               , VoidSymbol      , agrave          , Agrave          ]}; // a A 1   à À
    key <AC02> {[ s               , S               , 2               , VoidSymbol      , ssharp          , U1E9E           ]}; // s S 2   ß ẞ
    key <AC03> {[ d               , D               , 3               , VoidSymbol      , ecircumflex     , Ecircumflex     ]}; // d D 3   ê Ê
    key <AC04> {[ f               , F               , 4               , VoidSymbol      , minus           , ordfeminine     ]}; // f F 4   - ª
    key <AC05> {[ g               , G               , 5               , VoidSymbol      , endash          , endash          ]}; // g G 5   – –
    key <AC06> {[ h               , H               , 6               , VoidSymbol      , U0177           , U0176           ]}; // h H 6   ŷ Ŷ
    key <AC07> {[ j               , J               , 7               , VoidSymbol      , ucircumflex     , Ucircumflex     ]}; // j J 7   û Û
    key <AC08> {[ k               , K               , 8               , VoidSymbol      , icircumflex     , Icircumflex     ]}; // k K 8   î Î
    key <AC09> {[ l               , L               , 9               , VoidSymbol      , ocircumflex     , Ocircumflex     ]}; // l L 9   ô Ô
    key <AC10> {[ ISO_Level5_Latch, ISO_Level5_Latch, 0               , VoidSymbol      , dead_diaeresis  , VoidSymbol      ]}; // *¨ *¨ 0   ¨

    // Letters, third row
    key <AB01> {[ z               , Z               , less            , lessthanequal   , acircumflex     , Acircumflex     ]}; // z Z < ≤ â Â
    key <AB02> {[ x               , X               , greater         , greaterthanequal, multiply        , VoidSymbol      ]}; // x X > ≥ ×
    key <AB03> {[ c               , C               , bracketleft     , VoidSymbol      , ccedilla        , Ccedilla        ]}; // c C [   ç Ç
    key <AB04> {[ v               , V               , bracketright    , VoidSymbol      , underscore      , underscore      ]}; // v V ]   _ _
    key <AB05> {[ b               , B               , braceleft       , VoidSymbol      , emdash          , emdash          ]}; // b B {   — —
    key <AB06> {[ n               , N               , braceright      , VoidSymbol      , ntilde          , Ntilde          ]}; // n N }   ñ Ñ
    key <AB07> {[ m               , M               , equal           , VoidSymbol      , mu              , masculine       ]}; // m M =   µ º
    key <AB08> {[ comma           , semicolon       , minus           , VoidSymbol      , periodcentered  , U2022           ]}; // , ; -   · •
    key <AB09> {[ period          , colon           , plus            , VoidSymbol      , ellipsis        , VoidSymbol      ]}; // . : +   …
    key <AB10> {[ slash           , question        , backslash       , VoidSymbol      , questiondown    , division        ]}; // / ? \   ¿ ÷

    // Pinky keys
    key <AE11> {[ minus           , underscore      , VoidSymbol      , VoidSymbol      , emdash          , VoidSymbol      ]}; // - _     —
    key <AE12> {[ equal           , plus            , VoidSymbol      , VoidSymbol      , notequal        , plusminus       ]}; // = +     ≠ ±
    key <AE13> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <AD11> {[ bracketleft     , braceleft       , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // [ {
    key <AD12> {[ bracketright    , braceright      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // ] }
    key <AC11> {[ apostrophe      , quotedbl        , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // ' "
    key <AB11> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <TLDE> {[ grave           , asciitilde      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // ` ~
    key <BKSL> {[ backslash       , bar             , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // \ |
    key <LSGT> {[ less            , greater         , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // < >

    // Space bar
    key <SPCE> {[ space           , U202F           , space           , nobreakspace    , U2019           , U2019           ]}; //         ’ ’

    // The AltGr key is an ISO_Level3_Shift:
    include "level3(ralt_switch)"

    // The “OneDeadKey” is an ISO_Level5_Latch, which is activated by this:
    // (note: MDSW [Mode_switch] is an alias for LVL5 on recent versions of XKB)
    replace key <MDSW> {
        type[Group1] = "ONE_LEVEL",
        symbols[Group1] = [ ISO_Level5_Shift ]
    };
    modifier_map Mod3 { <MDSW> };
};
// vim: ft=xkb:fdm=indent:ts=4:nowrap
