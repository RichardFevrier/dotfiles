// Generated by kalamine on 2024-05-11
//
// This XKB symbols file should be copied to:
//     /usr/share/X11/xkb/symbols/custom
// or
//     $XKB_CONFIG_ROOT/symbols/custom
//
// File          : ergaie.xkb_symbols
// Project page  : https://github.com/MacDamien/Ergaie
// Author        : MacDamien
// Version       : 0.1.9.2
// License       : WTFPL - Do What The Fuck You Want Public License
//
// French (Ergaie)
//
// Base layer + dead key
// ╭╌╌╌╌╌┰─────┬─────┬─────┬─────┬─────┰─────┬─────┬─────┬─────┬─────┰╌╌╌╌╌┬╌╌╌╌╌╮
// ┆ ~   ┃ € ‚ │ « ‘ │ » ’ │ $   │ %   ┃ ^   │ & ¡ │ *   │ #   │ @   ┃ _ – ┆ + ± ┆
// ┆ `   ┃ 1 „ │ 2 “ │ 3 ” │ 4 ¢ │ 5 ‰ ┃ 6 ¥ │ 7 ¤ │ 8 € │ 9 § │ 0 ° ┃ / ÷ ┆ = ≠ ┆
// ╰╌╌╌╌╌╂─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┼╌╌╌╌╌┤
//       ┃ Q   │ C   │ L   │ D   │ V   ┃ K   │ F ! │ O   │***¨ │ J   ┃ [   ┆ ]   ┆
//       ┃   ( │   ç │   _ │   ) │   œ ┃   æ │   ! │   â │***¨ │   ù ┃ (   ┆ )   ┆
//       ┠─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┼╌╌╌╌╌┤
//       ┃ R   │ S   │ N   │ T   │ B   ┃ ; _ │ U   │ E   │ I   │ A   ┃ "   ┆ |   ┆
//       ┃   î │   ô │   û │   à │   ß ┃ , – │   é │   ê │   – │   è ┃ '   ┆ \   ┆
// ╭╌╌╌╌╌╂─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┴╌╌╌╌╌╯
// ┆ X   ┃ G   │ M   │ P   │ W   │ >   ┃ Z   │ H   │ ? ¿ │ Y   │ :   ┃
// ┆   ï ┃  *µ │   ñ │   · │   — │ <   ┃   ü │   ë │ - ‑ │   ÿ │ . … ┃
// ╰╌╌╌╌╌┸─────┴─────┴─────┴─────┴─────┸─────┴─────┴─────┴─────┴─────┚
//
// AltGr layer
// ╭╌╌╌╌╌┰─────┬─────┬─────┬─────┬─────┰─────┬─────┬─────┬─────┬─────┰╌╌╌╌╌┬╌╌╌╌╌╮
// ┆     ┃   ¹ │   ² │   ³ │   ⁴ │   ⁵ ┃   ⁶ │   ⁷ │   ⁸ │   ⁹ │   ⁰ ┃     ┆     ┆
// ┆     ┃   ₁ │   ₂ │   ₃ │   ₄ │   ₅ ┃   ₆ │   ₇ │   ₈ │   ₉ │   ₀ ┃     ┆     ┆
// ╰╌╌╌╌╌╂─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┼╌╌╌╌╌┤
//       ┃  *^ │     │     │  *¤ │   ‰ ┃     │     │   × │  *´ │  *` ┃     ┆     ┆
//       ┃   ^ │   < │   > │   $ │   % ┃   @ │   & │   * │   ' │   ` ┃     ┆     ┆
//       ┠─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┼╌╌╌╌╌┤
//       ┃  *ˇ │     │     │     │   ≠ ┃  */ │   ± │   — │   ÷ │  *¨ ┃     ┆     ┆
//       ┃   { │   ( │   ) │   } │   = ┃   \ │   + │   - │   / │   " ┃     ┆     ┆
// ╭╌╌╌╌╌╂─────┼─────┼─────┼─────┼─────╂─────┼─────┼─────┼─────┼─────╂╌╌╌╌╌┴╌╌╌╌╌╯
// ┆  *~ ┃     │     │   – │     │     ┃     │   ¬ │  *¸ │     │     ┃
// ┆   ~ ┃   [ │   ] │   _ │   # │     ┃   | │   ! │   ; │   : │   ? ┃
// ╰╌╌╌╌╌┸─────┴─────┴─────┴─────┴─────┸─────┴─────┴─────┴─────┴─────┚

partial alphanumeric_keys modifier_keys
xkb_symbols "ergaie_angle_mod" {
    name[group1]= "Ergaie (angle-mod)";
    key.type[group1] = "EIGHT_LEVEL";

    // Digits
    key <AE01> {[ 1               , EuroSign        , U2081           , onesuperior     , U201E           , U201A           ]}; // 1 € ₁ ¹ „ ‚
    key <AE02> {[ 2               , guillemotleft   , U2082           , twosuperior     , U201C           , U2018           ]}; // 2 « ₂ ² “ ‘
    key <AE03> {[ 3               , guillemotright  , U2083           , threesuperior   , U201D           , U2019           ]}; // 3 » ₃ ³ ” ’
    key <AE04> {[ 4               , dollar          , U2084           , U2074           , cent            , VoidSymbol      ]}; // 4 $ ₄ ⁴ ¢
    key <AE05> {[ 5               , percent         , U2085           , U2075           , U2030           , VoidSymbol      ]}; // 5 % ₅ ⁵ ‰
    key <AE06> {[ 6               , asciicircum     , U2086           , U2076           , yen             , VoidSymbol      ]}; // 6 ^ ₆ ⁶ ¥
    key <AE07> {[ 7               , ampersand       , U2087           , U2077           , currency        , exclamdown      ]}; // 7 & ₇ ⁷ ¤ ¡
    key <AE08> {[ 8               , asterisk        , U2088           , U2078           , EuroSign        , VoidSymbol      ]}; // 8 * ₈ ⁸ €
    key <AE09> {[ 9               , numbersign      , U2089           , U2079           , section         , VoidSymbol      ]}; // 9 # ₉ ⁹ §
    key <AE10> {[ 0               , at              , U2080           , U2070           , degree          , VoidSymbol      ]}; // 0 @ ₀ ⁰ °

    // Letters, first row
    key <AD01> {[ q               , Q               , asciicircum     , dead_circumflex , parenleft       , VoidSymbol      ]}; // q Q ^ ^ (
    key <AD02> {[ c               , C               , less            , lessthanequal   , ccedilla        , Ccedilla        ]}; // c C < ≤ ç Ç
    key <AD03> {[ l               , L               , greater         , greaterthanequal, underscore      , VoidSymbol      ]}; // l L > ≥ _
    key <AD04> {[ d               , D               , dollar          , dead_currency   , parenright      , VoidSymbol      ]}; // d D $ ¤ )
    key <AD05> {[ v               , V               , percent         , U2030           , oe              , OE              ]}; // v V % ‰ œ Œ
    key <AD06> {[ k               , K               , at              , VoidSymbol      , ae              , AE              ]}; // k K @   æ Æ
    key <AD07> {[ f               , F               , ampersand       , VoidSymbol      , exclam          , exclam          ]}; // f F &   ! !
    key <AD08> {[ o               , O               , asterisk        , multiply        , acircumflex     , Acircumflex     ]}; // o O * × â Â
    key <AD09> {[ ISO_Level5_Latch, ISO_Level5_Latch, apostrophe      , dead_acute      , dead_diaeresis  , dead_diaeresis  ]}; // *¨ *¨ ' ´ ¨ ¨
    key <AD10> {[ j               , J               , grave           , dead_grave      , ugrave          , Ugrave          ]}; // j J ` ` ù Ù

    // Letters, second row
    key <AC01> {[ r               , R               , braceleft       , dead_caron      , icircumflex     , Icircumflex     ]}; // r R { ˇ î Î
    key <AC02> {[ s               , S               , parenleft       , VoidSymbol      , ocircumflex     , Ocircumflex     ]}; // s S (   ô Ô
    key <AC03> {[ n               , N               , parenright      , VoidSymbol      , ucircumflex     , Ucircumflex     ]}; // n N )   û Û
    key <AC04> {[ t               , T               , braceright      , VoidSymbol      , agrave          , Agrave          ]}; // t T }   à À
    key <AC05> {[ b               , B               , equal           , notequal        , ssharp          , U1E9E           ]}; // b B = ≠ ß ẞ
    key <AC06> {[ comma           , semicolon       , backslash       , dead_stroke     , endash          , underscore      ]}; // , ; \ / – _
    key <AC07> {[ u               , U               , plus            , plusminus       , eacute          , Eacute          ]}; // u U + ± é É
    key <AC08> {[ e               , E               , minus           , emdash          , ecircumflex     , Ecircumflex     ]}; // e E - — ê Ê
    key <AC09> {[ i               , I               , slash           , division        , endash          , VoidSymbol      ]}; // i I / ÷ –
    key <AC10> {[ a               , A               , quotedbl        , dead_diaeresis  , egrave          , Egrave          ]}; // a A " ¨ è È

    // Letters, third row
    key <AB01> {[ g               , G               , bracketleft     , VoidSymbol      , dead_greek      , VoidSymbol      ]}; // g G [   µ
    key <AB02> {[ m               , M               , bracketright    , VoidSymbol      , ntilde          , Ntilde          ]}; // m M ]   ñ Ñ
    key <AB03> {[ p               , P               , underscore      , endash          , periodcentered  , VoidSymbol      ]}; // p P _ – ·
    key <AB04> {[ w               , W               , numbersign      , VoidSymbol      , emdash          , VoidSymbol      ]}; // w W #   —
    key <AB05> {[ less            , greater         , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // < >
    key <AB06> {[ z               , Z               , bar             , brokenbar       , udiaeresis      , Udiaeresis      ]}; // z Z | ¦ ü Ü
    key <AB07> {[ h               , H               , exclam          , notsign         , ediaeresis      , Ediaeresis      ]}; // h H ! ¬ ë Ë
    key <AB08> {[ minus           , question        , semicolon       , dead_cedilla    , U2011           , questiondown    ]}; // - ? ; ¸ ‑ ¿
    key <AB09> {[ y               , Y               , colon           , VoidSymbol      , ydiaeresis      , Ydiaeresis      ]}; // y Y :   ÿ Ÿ
    key <AB10> {[ period          , colon           , question        , VoidSymbol      , ellipsis        , VoidSymbol      ]}; // . : ?   …

    // Pinky keys
    key <AE11> {[ slash           , underscore      , VoidSymbol      , VoidSymbol      , division        , endash          ]}; // / _     ÷ –
    key <AE12> {[ equal           , plus            , VoidSymbol      , VoidSymbol      , notequal        , plusminus       ]}; // = +     ≠ ±
    key <AE13> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <AD11> {[ parenleft       , bracketleft     , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // ( [
    key <AD12> {[ parenright      , bracketright    , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // ) ]
    key <AC11> {[ apostrophe      , quotedbl        , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // ' "
    key <AB11> {[ VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; //
    key <TLDE> {[ grave           , asciitilde      , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // ` ~
    key <BKSL> {[ backslash       , bar             , VoidSymbol      , VoidSymbol      , VoidSymbol      , VoidSymbol      ]}; // \ |
    key <LSGT> {[ x               , X               , asciitilde      , dead_tilde      , idiaeresis      , Idiaeresis      ]}; // x X ~ ~ ï Ï

    // Space bar
    key <SPCE> {[ space           , U202F           , space           , nobreakspace    , U2019           , U2019           ]}; //         ’ ’

    // The AltGr key is an ISO_Level3_Shift:
    include "level3(ralt_switch)"

    // The “OneDeadKey” is an ISO_Level5_Latch, which is activated by this:
    // (note: MDSW [Mode_switch] is an alias for LVL5 on recent versions of XKB)
    replace key <MDSW> {
        type[Group1] = "ONE_LEVEL",
        symbols[Group1] = [ ISO_Level5_Shift ]
    };
    modifier_map Mod3 { <MDSW> };
};
// vim: ft=xkb:fdm=indent:ts=4:nowrap
